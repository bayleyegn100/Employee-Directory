{"version":3,"sources":["components/Navbar/index.js","components/Search/index.js","components/Table/index.js","utils/API.js","components/EmployeeMain/index.js","App.js","index.js"],"names":["Navbar","className","Search","props","onSubmit","handleFormSubmit","value","onChange","handleInputChange","type","id","placeholder","Table","scope","onClick","sortEmpDate","sortEmpFirst","sortEmpLast","sortEmpEmail","state","filteredEmp","map","employee","hireDate","moment","registered","date","format","name","first","last","email","phone","login","uuid","employeeAmount","Math","floor","random","URL","axios","get","EmployeeMain","search","employees","e","target","setState","filterEmp","toLowerCase","trim","preventDefault","sort","emp1","emp2","sortEmpPhone","input","filter","includes","API","then","res","data","results","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce48f26d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar() {\n    return (\n        <nav className=\"main-header\">\n            \n                <h1>Employee Directory</h1>\n            \n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Search(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"mb-3\">\n            <form className=\"form-inline\" onSubmit={props.handleFormSubmit}>\n                <input\n                    value={props.value}\n                    onChange={props.handleInputChange}\n                    type=\"search\"\n                    className=\"form-control mt-2\"\n                    id=\"searchInput\"\n                    placeholder=\"Filter employees!\">\n                </input>\n            </form>\n        </div>\n    </div>\n    )\n}\n\nexport default Search;","import React from \"react\";\nimport \"./style.css\";\nimport moment from \"moment\";\n\nconst Table = (props) => {\n\n    return (\n        <div className=\"container\">\n            <table className=\"table empTable\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" onClick={props.sortEmpDate} className=\"sort\">Date Hired</th>\n                        <th scope=\"col\" onClick={props.sortEmpFirst} className=\"sort\">First Name</th>\n                        <th scope=\"col\" onClick={props.sortEmpLast} className=\"sort\">Last Name</th>\n                        <th scope=\"col\" onClick={props.sortEmpEmail} className=\"sort\">Email Address</th>\n                        <th scope=\"col\" onClick={props.sortEmpEmail} className=\"sort\">Phone Number</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.state.filteredEmp.map((employee) => {\n\n                        \n                        const hireDate = moment(employee.registered.date).format(\"MM/DD/YYYY\")\n                        \n\n                        return (\n                            <tr key={employee.login.uuid} className=\"tableData\">\n                                <td>\n                                    {hireDate}\n                                </td>\n                                <td>{employee.name.first}</td>\n                                <td>{employee.name.last}</td>\n                                <td>{employee.email}</td>\n                                <td>{`+1-${employee.phone}`}</td>\n                            </tr>\n                        )\n                    }\n                    )}\n\n                </tbody>\n            </table>\n        </div>\n\n    );\n}\n\nexport default Table;","import axios from \"axios\";\n\nconst employeeAmount = Math.floor(Math.random() * 20 + 10)\nconst URL = `https://randomuser.me/api/?results=${employeeAmount}`\n\nexport default {\n        getEmps: function () {\n                return axios.get(URL);\n        }\n}","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Search from \"../Search\";\nimport Table from \"../Table\";\nimport API from \"../../utils/API\";\nimport moment from \"moment\";\n\nclass EmployeeMain extends Component {\n    state = {\n        search: \"\",\n        employees: [],\n        filteredEmp: [],\n    };\n\n    componentDidMount() {\n        API.getEmps()\n            .then((res) =>\n                this.setState({\n                    employees: res.data.results,\n                    filteredEmp: res.data.results\n                })\n            )\n            .catch(err => console.log(err));\n    }\n\n    handleInputChange = (e) => {\n        const value = e.target.value;\n        this.setState({ search: value });\n        this.filterEmp(value.toLowerCase().trim());\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n    }\n\n    sortEmpFirst = (e) => {\n        this.setState({\n            filteredEmp: this.state.filteredEmp.sort(\n                (emp1, emp2) => {\n                    if (emp1.name.first < emp2.name.first) {\n                        return -1\n                    } else if (emp1.name.first > emp2.name.first) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    sortEmpLast = (e) => {\n        this.setState({\n            filteredEmp: this.state.filteredEmp.sort(\n                (emp1, emp2) => {\n                    if (emp1.name.last < emp2.name.last) {\n                        return -1\n                    } else if (emp1.name.last > emp2.name.last) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    sortEmpDate = (e) => {\n        this.setState({\n            filteredEmp: this.state.filteredEmp.sort(\n                (emp1, emp2) => {\n                    if (emp1.registered.date < emp2.registered.date) {\n                        return -1\n                    } else if (emp1.registered.date > emp2.registered.date) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    sortEmpEmail = (e) => {\n        this.setState({\n            filteredEmp: this.state.filteredEmp.sort(\n                (emp1, emp2) => {\n                    if (emp1.email < emp2.email) {\n                        return -1\n                    } else if (emp1.email > emp2.email) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    sortEmpPhone = (e) => {\n        this.setState({\n            filteredEmp: this.state.filteredEmp.sort(\n                (emp1, emp2) => {\n                    if (emp1.phone < emp2.phone) {\n                        return -1\n                    } else if (emp1.phone > emp2.phone) {\n                        return 1\n                    } else { return 0 }\n                }\n            )\n        })\n    }\n\n    filterEmp = (input) => {\n        if (input) {\n            this.setState({\n                filteredEmp: this.state.employees.filter((employee) => {\n                    return (\n                        employee.name.first.includes(input) ||\n                        employee.name.last.includes(input) ||\n                        employee.phone.includes(input) ||\n                        employee.email.includes(input) ||\n                        moment(employee.registered.date).format(\"MM/DD/YYYY\").includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ filteredEmp: this.state.employees });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Search\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <Table\n                    state={this.state}\n                    filterEmp={this.filterEmp}\n                    sortEmpFirst={this.sortEmpFirst}\n                    sortEmpLast={this.sortEmpLast}\n                    sortEmpDate={this.sortEmpDate}\n                    sortEmpEmail={this.sortEmpEmail}\n                    sortEmpPhone={this.sortEmpPhone}\n\n                />\n            </div>\n        );\n    }\n\n}\n\nexport default EmployeeMain;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport EmployeeMain from './components/EmployeeMain'\n\n\nfunction App() {\n  return (\n    <div id=\"mainBody\">\n      <Navbar />\n      <EmployeeMain />\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}